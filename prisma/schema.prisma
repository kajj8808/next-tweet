// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  name      String
  profile   String?
  Like      Like[]
  Tweet     Tweet[]
  Coment    Coment[]
  TweetView TweetView[]
  Share     Share[]
}

model Tweet {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Like      Like[]
  Coment    Coment[]
  TweetView TweetView[]
  Share     Share[]
}

model Share {
  id      Int   @id @default(autoincrement())
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
  tweet   Tweet @relation(fields: [tweetId], references: [id])
  tweetId Int
}

model TweetView {
  id      Int   @id @default(autoincrement())
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
  tweet   Tweet @relation(fields: [tweetId], references: [id])
  tweetId Int
}

model Coment {
  id        Int      @id @default(autoincrement())
  text      String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  tweetId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  tweetId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
